<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB6kWb9i_KR9xyaQATIPSQfbfRQJ3dym2U&callback=initMap" async defer>
//zoli 
</script>
<script>
    var map;
    var selfPos = null;
    var directionsDisplay;
    var directionsService;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {
                lat: 47.532300,
                lng: 21.629500
            },
            zoom: 12,
            disableDoubleClickZoom: true,
            disableDefaultUI: true,
            gestureHandling: "greedy",
            clickableIcons: false,
            styles: [{
                    featureType: 'poi.business',
                    elementType: 'all',
                    stylers: [{
                            visibility: 'off'
                        }]
                }, {
                    featureType: 'poi.park',
                    elementType: 'labels.icon',
                    stylers: [{
                            visibility: 'off'
                        }]
                }]
        });

        map.addListener('dragend', refreshList);
        map.addListener('zoom_changed', refreshList);

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                selfPos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                map.setCenter(selfPos);
                map.setZoom(15);
                addMarker(selfPos, '51baef', 'Ön itt áll');
                window.setTimeout(refreshList, 500);
                
                directionsService = new google.maps.DirectionsService();
                directionsDisplay = new google.maps.DirectionsRenderer();
                directionsDisplay.setMap(map);
            });
        } else {
            window.setTimeout(refreshList, 500);
        }
    }
    var markers = [];

    function calcRoute(pos) {
        if(!selfPos || !pos){
            console.log(':(');
            return;
        }
       // var end = markers[0].getPosition();
        var bounds = new google.maps.LatLngBounds();
        bounds.extend(selfPos);
        bounds.extend(pos);
        map.fitBounds(bounds);
        var request = {
            origin: selfPos,
            destination: pos,
            travelMode: google.maps.TravelMode.DRIVING
        };
        directionsService.route(request, function (response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                directionsDisplay.setMap(map);
            } else {
                alert("Directions Request from " + start.toUrlValue(6) + " to " + end.toUrlValue(6) + " failed: " + status);
            }
        });
    }
    
    function getColoredMarker(color){
        return new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + color,
            new google.maps.Size(21, 34),
            new google.maps.Point(0,0),
            new google.maps.Point(10, 34));
    }
    function refreshList() {
        var bounds = map.getBounds();
        $.post(
                '/____/pubMap/getList',
                {
                    date: $("#date").val(),
                    time: $("#time").val(),
                    maxPrice: $("#sliderInput").val(),
                    minLat: bounds.f.b,
                    minLong: bounds.b.b,
                    maxLat: bounds.f.f,
                    maxLong: bounds.b.f
                },
                function (data) {
                    deleteMarkers();
                    $('#result-container').empty();
                    $.each(data, function (key, val) {
                        addPubMarker(val);
                        addResultToList(val);
                    });
                }
        );
    }
    
    function addResultToList(res) {
        var entry = $('<div>')
                .addClass('result-entry')
                .html(res.name)
                .click(function(){
                    makePopUp('/____/pubMap/showPub/'+res.id);
                });
        $('#result-container').append(entry);
    }
    
    function addMarker(pos, color, name) {
        return new google.maps.Marker({
            position: pos,
            map: map,
            title: name,
            icon: getColoredMarker(color)
        });
    }
    
    function addPubMarker(res) {
        var color;
        switch(res.opened){
            case 'close':
                color = 'ed9482';
                break;
            case 'open':
                color = 'a0f280';
                break;
            case '1hour':
                color = 'f2dc63';
                break;
            default:
                color = 'FFFFFF';
        };
        var marker = addMarker({lat: Number(res.lat), lng: Number(res.lng)}, color, res.name);
        marker.addListener('click', function() {
            makePopUp('/____/pubMap/showPub/'+id);
        });
        markers.push(marker);
    }

    // Sets the map on all markers in the array.
    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    function clearMarkers() {
        setMapOnAll(null);
    }

    function showMarkers() {
        setMapOnAll(map);
    }

    function deleteMarkers() {
        clearMarkers();
        markers = [];
    }

</script>
<div id="map"></div>
<div class="box-element marker-legend-container">
    <div>
        <div class="marker-sample margin-align-vertical-middle" style="background-color: #a0f280;"></div>
        <span class="label-text margin-align-vertical-middle">Nyitva</span>
    </div>
    <div>
        <div class="marker-sample margin-align-vertical-middle" style="background-color: #f2dc63;"></div>
        <span class="label-text margin-align-vertical-middle">Egy órán belül zár</span>
    </div>
    <div>
        <div class="marker-sample margin-align-vertical-middle" style="background-color: #ed9482;"></div>
        <span class="label-text margin-align-vertical-middle">Zárva</span>
    </div>
</div>
<div id="locate-user" class="box-element">
    <svg class="margin-align-vertical-middle margin-align-horizontal-middle">
        <line x1="50%" y1="0%" x2="50%" y2="15%"/>
        <line x1="50%" y1="100%" x2="50%" y2="85%"/>
        <line x1="0%" y1="50%" x2="15%" y2="50%"/>
        <line x1="100%" y1="50%" x2="85%" y2="50%"/>
        <circle cx="50%" cy="50%" r="35%" fill="none"/>
        <circle cx="50%" cy="50%" r="15%" fill="#555555"/>
    </svg>
</div>
<?= $this->get('valami'); ?>